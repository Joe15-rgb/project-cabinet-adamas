/*   Open state of the #dialog  */
#dialog[open] {
  opacity: 1;
  transform: scaleY(1);
  height: 460px;
  width: 470px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 1rem;
  border: none;
  border-radius: 13px;
  -webkit-border-radius: 13px;
  -moz-border-radius: 13px;
  -ms-border-radius: 13px;
  -o-border-radius: 13px;
}

/*   Closed state of the #dialog   */
#dialog {
  opacity: 0;
  transform: scaleY(0);
  // transition:
  //   opacity 0.7s ease-out,
  //   transform 0.7s ease-out,
  //   overlay 0.7s ease-out allow-discrete,
  //   display 0.7s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous #dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  #dialog[open] {
    opacity: 0;
    transform: scaleY(0);
  }
}

/* Transition the :backdrop when the #dialog modal is promoted to the top layer */
#dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.667);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

#dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  #dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}

.dialog-head {
  width: 100%;
  height: 40px;
  display: flex;
  justify-content: space-between;
  align-items: center;

  .close {
    cursor: pointer;
    background-color: transparent;
    border: none;
    font-size: 2.5rem;

    &:hover {
      color: #e05353b4;
    }
  }
}


.dialog-main {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  input {
    caret-color: red;
    font:
      16px "Helvetica",
      "Arial",
      "sans-serif";
  }

  .field {

    & * {
      display: block;
    }

  }

  


}